# git clone https://github.com/google/googletest.git
# export GTEST_DIR=~/googletest/googletest ,,,, echo $GTEST_DIR
# make new folder for testing
# g++ -isystem ${GTEST_DIR}/include -I${GTEST_DIR} -pthread -c ${GTEST_DIR}/src/gtest-all.cc ar -rv libgtest.a gtest-all.o
# Unit test g++ -isystem ${GTEST_DIR}/include -pthread unit_test_case.c code_to_be_tested.c Gtest_main.c libgtest.a -o my_test
CC = gcc

# GTEST_INCLUDE= -I $(GTEST_DIR)/include

# COPTS= -fprofile-arcs -ftest-coverage

INCLUDE = ./include

SRC = ./src

CFLAGS = -c -I$(INCLUDE) -lpthread

OBJECTS := $(patsubst %.c,%.o,$(wildcard $(SRC)*.c))

EXECUTABLE = program

all: $(OBJECTS) $(EXECUTABLE)

# The $@ refers to the left side of : 
$(EXECUTABLE) : $(OBJECTS)
		$(CC) $(OBJECTS) -o $@ $(LIBS) -lpthread

.c.o: *.h
	$(CC) $(CFLAGS) $< -o $@

clean :
	-rm -f $(OBJECTS) $(EXECUTABLE)

#Here we define a new rule by combining two predefined rules
full: all clean